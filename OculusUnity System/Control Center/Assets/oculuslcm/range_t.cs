 /* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace oculuslcm
{
    public sealed class range_t : LCM.LCM.LCMEncodable
    {
        public float range;
 
        public range_t()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x324da988abdbae17L;
 
        static range_t()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("oculuslcm.range_t"))
                return 0L;
 
            classes.Add("oculuslcm.range_t");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.range); 
 
        }
 
        public range_t(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public range_t(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static oculuslcm.range_t _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            oculuslcm.range_t o = new oculuslcm.range_t();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.range = ins.ReadSingle();
 
        }
 
        public oculuslcm.range_t Copy()
        {
            oculuslcm.range_t outobj = new oculuslcm.range_t();
            outobj.range = this.range;
 
            return outobj;
        }
    }
}

